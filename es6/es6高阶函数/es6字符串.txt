     字符串高阶函数
let string = "apple, banana, orange";
以上三个方法都可以接受两个参数，需要搜索的字符串，和可选的搜索起始位置索引。

string.includes("banana");  //true 查看字符串是否包含搜索的字符串，和可选的搜素起始位置索引

string.startsWith("apple")；//true 判断参数字符串是否在原字符串的头部

string,endsWith("apple");  //false判断参数字符串是否在原字符串的尾部

string.startsWith("banana",6); //true

  字符串重复
repeat(); 返回新的字符串, 表示将字符串重复指定次数返回。

console.log("Hello,".repeat(2)); //"Hello,Hello,"

如果参数是小数，向下取整

console.log("Hello", repeat(3.2)); //"Hello,Hello,Hello,"

如果参数是0至-1之间的小数，会进行取整运算，0至-1之间的小数取整得到-0，等同于repeat零次

console.log("Hello", repeat(-0.5)); //""

如果参数是NaN， 等同于repeat零次

console.log("NaN".repeat(NaN))  //""

如果参数是负数或者Infinity, 会报错:

console.log("Hello,".repeat(-1));  
// RangeError: Invalid count value

console.log("Hello,".repeat(Infinity));  
// RangeError: Invalid count value

如果传入的参数是字符串，则会先将字符串转化为数字

console.log("Hello,".repeat("hh")); // ""
console.log("Hello,".repeat("2"));  // "Hello,Hello,"

  字符串补全
  padStart: 返回新的字符串，表示用参数字符串从头部（左侧）补全原字符串
  padEnd：返回新的字符串，表示用参数字符串从尾部 （右侧）补全原字符串

以上两个方法接受两个参数，第一个参数是指定生成的字符串的最小长度，第二个参数是用来补全的字符串。如果没有
指定第二个参数，默认用空格填充。

console.log("h".padStart(5,"o")); //"ooooh"
console.log("h".padEnd(5,"o")); //"hoooo"
console.log("h".padStart(5));     //"    h"

如果指定的长度小于或者等于原字符串的长度， 则返回原字符串：

console.log("hello".padStart(5,"A")) // "hello"

如果原字符串加上补全字符串长度大于指定长度，则截去超出位数的补全字符串:

console.log("hello".padEnd(10,",world!"));  // "hello,worl"

常用于补全位数：

console.log("123".padStart(10,"0"));  // "0000000123"






















